name: Build

on:
  push:
    branches: [ feature/**, develop, main, release/**, bugfix/**, hotfix/** ]
  pull_request:
    branches: [ develop, main ]
  workflow_run:
    workflows: [ "Unit Test" ]
    types: [ completed ]
    branches: [ feature/**, develop, main, release/**, bugfix/**, hotfix/** ]

jobs:
  build:
    name: Docker Build
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      # 현재 레포지토리 업로드
      - name: Checkout my code
        uses: actions/checkout@v3

      # JAVA JDK 설치
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      # application.yml 파일 생성
      - name: Set application.yml
        run: |
          cd ./src/main/resources
          touch ./application-dev.yml
          echo "${{ secrets.APPLICATION_DEV }}" > ./application-dev.yml
          touch ./application.yml
          echo "${{ secrets.APPLICATION_STAGING }}" > ./application.yml
          ls -al

      # Spring 빌드
      - name: Spring Build, Make .jar
        run:
          ./gradlew build

      # Docker 설정
      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@v2

      # Docker 빌드
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Docker Image meta 설정
      - name: Set up Docker Image meta data
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: comstering/baesa

      # Docker Hub 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Docker Build, Docker Hub Push
      - name: Docker Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
